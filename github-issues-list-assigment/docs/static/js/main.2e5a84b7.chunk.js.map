{"version":3,"sources":["utils/appHelpers.js","components/Comments.jsx","components/FixedHeaderComponent.jsx","components/Labels.jsx","components/Milestones.jsx","components/PaginationComponent.jsx","components/StackedIcons.jsx","components/TimeAgoComponent.jsx","components/GithubIssues.jsx","app/App.js","utils/serviceWorker.js","index.js"],"names":["showdown","require","padZero","str","len","Array","join","slice","invertColor","hex","bw","indexOf","length","Error","r","parseInt","g","b","toString","getTimeAgoString","timestamp","elapsed","Date","now","getElapsedString","value","unit","round","Math","SECOND","MINUTE","HOUR","DAY","converter","Converter","tables","strikethrough","ghCompatibleHeaderId","literalMidWordUnderscores","ghCodeBlocks","tasklists","ghMentions","ghMentionsLink","Comments","data","className","comments","icon","faComment","transform","style","background","color","titleCase","inStr","replace","tStr","charAt","toUpperCase","substr","toLowerCase","NavbarButtonGroup","buttonArray","filterType","clickFunction","listFilter","onClick","map","stateChoice","i","key","data-choice","data-list-filter","FixedHeaderComponent","props","state","avatar","handleFilter","bind","getAvatar","this","previousProps","previousState","avatarUrlBase","user","repo","fetch","headers","Authorization","Accept","then","response","ok","json","setState","owner","avatar_url","e","preventDefault","target","dataset","choice","obj","onFilterChange","date","since","dateString","getTime","getTimezoneOffset","toISOString","split","titleString","role","href","src","width","height","aria-label","aria-expanded","data-target","aria-hidden","id","React","Component","Labels","labels","labelMap","label","index","backgroundColor","appHelpers","name","Fragment","Milestones","milestone","_addclass","faMapSigns","title","PaginationComponent","sendPageNumber","onPageChange","currentTarget","url","pages","currentPageNumber","lastpage","last","pop","prev","pageButtons","apply","Number","call","x","data-url","page","p","IssueIconStack","faCircle","faExclamationCircle","faCheck","PrIconStack","faCodeBranch","StackedIcons","type","iconColor","TimeAgoComponent","createdAt","created_at","updatedAt","updated_at","login","whichTime","number","timeAgoString","assigneesString","assignees","GithubIssues","per_page","sort","issues","loading","error","showBody","getIssues","handlePageChange","handleFilterChange","$navbarBurgers","prototype","document","querySelectorAll","forEach","el","addEventListener","$target","getElementById","classList","toggle","nextState","params","keys","Object","encodeURIComponent","linkHeaders","userRepoIssues","fullUrl","get","header","reduce","links","part","section","trim","catch","max","message","incrementPage","toFilter","filterObj","newObj","stateTest","renderError","handleClick","querySelector","innerHTML","makeHtml","body","hideMe","issueOrPr","choiceType","pull_request","data-id","faEye","renderLoading","renderIssues","flexGrow","justifyContent","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e5a84b7.chunk.js","sourcesContent":["var showdown  = require('showdown')\n\nfunction padZero(str, len) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n}\nexport const invertColor = (hex, bw) => {\n    if (hex.indexOf('#') === 0) { hex = hex.slice(1) }\n    if (hex.length === 3) { hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] }\n    if (hex.length !== 6) { throw new Error('Invalid HEX color.') }\n    var r = parseInt(hex.slice(0, 2), 16), \n        g = parseInt(hex.slice(2, 4), 16), \n        b = parseInt(hex.slice(4, 6), 16);\n    if (bw) {\n        return (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? '#000000' : '#FFFFFF'\n    }\n    r = (255 - r).toString(16); g = (255 - g).toString(16); b = (255 - b).toString(16);\n    return \"#\" + padZero(r) + padZero(g) + padZero(b)\n\n}\n\nexport const getTimeAgoString = (timestamp) => {\n    const SECOND = 1000,\n        MINUTE = SECOND * 60,\n        HOUR = MINUTE * 60,\n        DAY = HOUR * 24,\n        MONTH = DAY * 30,\n        YEAR = DAY * 365;\n\n    const elapsed = Date.now() - timestamp,\n        getElapsedString = (value, unit) => {\n            const round = Math.round(elapsed / value);\n            return `${round} ${unit}${round > 1\n                ? 's'\n                : ''} ago`;\n        };\n    if (elapsed < MINUTE) {\n        return getElapsedString(SECOND, 'second');\n    }\n    if (elapsed < HOUR) {\n        return getElapsedString(MINUTE, 'minute');\n    }\n    if (elapsed < DAY) {\n        return getElapsedString(HOUR, 'hour');\n    }\n    if (elapsed < MONTH) {\n        return getElapsedString(DAY, 'day');\n    }\n    if (elapsed < YEAR) {\n        return getElapsedString(MONTH, 'month');\n    }\n    return getElapsedString(YEAR, 'year');\n}\n\nexport const encodeQueryString = (params) => {\n    const keys = Object.keys(params)\n    return keys.length\n        ? \"?\" + keys\n            .map(key => encodeURIComponent(key)\n                + \"=\" + encodeURIComponent(params[key]))\n            .join(\"&\")\n        : \"\"\n}\nexport const converter = new showdown.Converter({\n    tables: true,\n    strikethrough: true,\n    ghCompatibleHeaderId: true,\n    literalMidWordUnderscores: true,\n    ghCodeBlocks: true,\n    tasklists: true,\n    ghMentions: true,\n    ghMentionsLink: 'https://github.com/{u}'\n})\n\nexport function parseLinkHeader(header) {\n    if (header.length === 0) {\n        throw new Error(\"input must not be of zero length\");\n    }\n\n    // Split parts by comma and parse each part into a named link\n    return header.split(/(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/).reduce((links, part) => {\n        const section = part.split(/(?!\\B\"[^\"]*);(?![^\"]*\"\\B)/);\n        if (section.length < 2) {\n            throw new Error(\"section could not be split on ';'\");\n        }\n        const url = section[0].replace(/<(.*)>/, '$1').trim();\n        const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n\n        links[name] = url;\n\n        return links;\n    }, {});\n}\nexport function promiseMap(xs, f) {\n    const reducer = (ysAcc$, x) =>\n      ysAcc$.then(ysAcc =>\n        f(x).then(y => {\n          ysAcc[x] = y;\n          return ysAcc;\n        })\n      );\n    return xs.reduce(reducer, Promise.resolve({}));\n  }\n  ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faComment,\n} from '@fortawesome/free-solid-svg-icons'\nconst Comments = ({ data }) => {\n    let jsx = <span className={data.comments < 1 ? \"is-hidden\" : \"fa-layers  fa-lg comments\"}  >\n        <FontAwesomeIcon icon={faComment} transform=\"down-2 left-2\">1</FontAwesomeIcon>\n        <span className=\"fa-layers-counter fa-2x\" transform=\"up-5\" style={{ background: \"LightGrey\", color: \"black\" }}>{data.comments < 0 ? \"\" : data.comments}</span>\n    </span>\n\n    return (jsx);\n}\nexport default Comments;","import React from 'react';\nconst titleCase = (inStr) => {\n    return inStr.replace(/\\w\\S*/g, function (tStr) {\n        return tStr.charAt(0).toUpperCase() + tStr.substr(1).toLowerCase();\n    });\n}\nconst NavbarButtonGroup = ({ buttonArray, filterType, clickFunction, listFilter }) => {\n\n    return (\n        <div className=\"buttons has-addons\" onClick={clickFunction}>\n            {buttonArray.map((stateChoice, i) => {\n                return (\n                    <span key={i} data-choice={stateChoice}\n                        data-list-filter={filterType}\n                        className={\"button \" + (listFilter[filterType] === stateChoice ? \"is-selected is-active is-info\" : \"\")}>{titleCase(stateChoice)}\n                    </span>\n                )\n            })}\n        </div>\n    )\n}\nclass FixedHeaderComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: \"https://github.githubassets.com/images/icons/emoji/octocat.png\",\n\n        };\n        this.handleFilter = this.handleFilter.bind(this);\n        this.getAvatar = this.getAvatar.bind(this);\n    }\n\n    componentDidMount() {\n        this.getAvatar()\n\n    }\n\n    shouldComponentUpdate(previousProps, previousState) {\n        if (previousProps.listFilter !== this.props.listFilter) {\n            return true;\n        }\n        if (previousState.avatar !== this.state.avatar) {\n            return true;\n        }\n        return false;\n    }\n\n    getAvatar() {\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n        const baseUrl = \"https://api.github.com/repos\"\n        const avatarUrlBase = `${baseUrl}/${this.props.user}/${this.props.repo}`\n        fetch(avatarUrlBase, headers)\n            .then(response => {\n                if (response.ok) return response.json();\n                throw new Error('Request failed.');\n            }).then(data => {\n                this.setState({ avatar: data.owner.avatar_url })\n            })\n    }\n\n    handleFilter(e) {\n        e.preventDefault();\n        const value = e.target.dataset.choice\n        const type = e.target.dataset.listFilter\n        let obj = {}\n        obj[type] = value\n        this.props.onFilterChange(obj);\n    }\n\n    render() {\n\n        const date = new Date(this.props.since);\n        const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n            .toISOString()\n            .split(\"T\")[0];\n\n        const { state, choice } = this.props.listFilter\n        const titleString = `${titleCase(state)} ${choice === \"all\" ? \"issues/PRs\" : choice} since ${dateString}`\n        return (\n\n            <nav className=\"navbar is-fixed-top navbar-center panel-heading\" role=\"navigation\">\n                <div className=\"navbar-brand navbar-center\">\n                    <a className=\"navbar-item\" href=\"#\">\n                        <img src={this.state.avatar} width=\"28px\" height=\"28px\" />\n                    </a>\n                    <span className=\"navbar-item \">\n                        <p className=\"is-unselectable is-mobile  title-string\">{titleString}</p ></span>\n                    <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </a>\n                </div>\n\n\n                {\n                    <div className=\"navbar-center\">\n                        <div id=\"navbarBasicExample\" className=\"navbar-menu navbar-center\">\n                            <a className=\"navbar-item \">\n                                <NavbarButtonGroup\n                                    buttonArray={[\"issues\", \"pull requests\", \"all\"]}\n                                    filterType=\"choice\"\n                                    clickFunction={this.handleFilter}\n                                    listFilter={this.props.listFilter}\n                                />\n                            </a>\n\n                            <a className=\"navbar-item\">\n                                <NavbarButtonGroup\n                                    buttonArray={[\"open\", \"closed\", \"all\"]}\n                                    filterType=\"state\"\n                                    clickFunction={this.handleFilter}\n                                    listFilter={this.props.listFilter}\n                                />\n                            </a>\n                        </div>\n                    </div>\n                }\n            </nav>\n        );\n    }\n}\nexport default FixedHeaderComponent;","import React from 'react';\nimport * as appHelpers from '../utils/appHelpers';\n\nconst Labels = ({ labels }) => {\n    let labelMap = labels.map((label, index) => {\n        return <span key={index} style={{ backgroundColor: \"#\" + label.color, color: appHelpers.invertColor(\"#\" + label.color, true) }} className={\"tag \" + (labels.length === 0 ? \"is-hidden\" : \"\")}>{label.name}</span>\n    })\n    return (\n        <React.Fragment>\n            {labelMap}\n        </React.Fragment>\n    )\n}\nexport default Labels;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faMapSigns,\n} from '@fortawesome/free-solid-svg-icons'\nconst Milestones = ({ milestone, _addclass }) => {\n    let jsx = <span className={!milestone ? \"is-hidden\" : \"milestone\" + \" \" + (_addclass ? [..._addclass] : \"\")}>\n        <FontAwesomeIcon icon={faMapSigns} className=\"fa-lg\" /> {!milestone ? \"\" : milestone.title}\n    </span>\n    return jsx;\n}\nexport default Milestones;","import React from 'react';\nclass PaginationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sendPageNumber = this.sendPageNumber.bind(this);\n    }\n\n    sendPageNumber(e) {\n        this.props.onPageChange(`${e.currentTarget.dataset.url}`);\n    }\n\n    render() {\n        const pages = this.props.pages;\n        const currentPageNumber = this.props.currentPageNumber\n        const lastpage = pages.last ? pages.last.split(\"=\").pop() : pages.prev ? +pages.prev.split(\"=\").pop() + 1 : 1\n        const pageButtons = Array.apply(null, { length: lastpage })\n            .map(Number.call, Number)\n            .map(x => `&page=${x + 1}`)\n        return (\n            <nav className=\"pagination is-medium is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                <button\n                    className={\"pagination-previous \" + (currentPageNumber > 1 ? \"\" : \" is-invisible\")}\n                    data-url={`&page=${currentPageNumber - 1}`}\n                    onClick={this.sendPageNumber}>\n                    ◄◄\n                </button>\n                <button\n                    className=\"pagination-link is-hidden-tablet\">{`${currentPageNumber}/${lastpage}`}\n                </button>\n                <button \n                    className={\"pagination-next \" + (currentPageNumber < lastpage ? \"\" : \" is-invisible\")}\n                    data-url={`&page=${currentPageNumber + 1}`}\n                    onClick={this.sendPageNumber}>\n                    ►►\n                </button>\n                <ul className=\"pagination-list\">\n                    {pageButtons.map((page, i) => {\n                        const p = +page.split(\"=\").pop()\n                        return <li key={i} className=\"is-hidden-mobile\">\n                            <button \n                                data-url={page}\n                                onClick={this.sendPageNumber}\n                                className={\"pagination-link \" + (p === (currentPageNumber) ? \" is-current\" : p)}\n                                aria-label={\"Goto page \" + p} >{p}\n                            </button>\n                        </li>\n                    }\n                    )}\n                </ul>\n            </nav>\n\n        );\n    }\n}\nexport default PaginationComponent;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faCheck,\n    faExclamationCircle,\n    faCodeBranch,\n    faCircle\n} from '@fortawesome/free-solid-svg-icons'\nconst IssueIconStack = ({ state }) => {\n    return (\n        <span className=\"fa-layers fa-fw fa-2x\">\n\n            <FontAwesomeIcon icon={faCircle} color={state} />\n\n            <FontAwesomeIcon\n                className=\"fa-inverse\"\n                icon={faExclamationCircle}\n                color={state}\n                transform=\"shrink-2\"\n            />\n\n            {\n                state === \"red\" &&\n                <FontAwesomeIcon\n                    icon={faCheck}\n                    color={state}\n                    transform=\"shrink-10 right-5 up-4\"\n                />\n            }\n\n        </span>\n    )\n}\n\nconst PrIconStack = ({ state }) => {\n    return (\n        <span className=\"fa-layers fa-fw fa-2x\">\n\n            <FontAwesomeIcon\n                icon={faCodeBranch}\n                color={state}\n                transform=\"shrink-4\"\n            />\n\n            {\n                state === \"red\" ?\n                    <FontAwesomeIcon\n                        icon={faCheck}\n                        color={state}\n                        transform=\"shrink-8 right-4 down-4\"\n                    />\n                    : \"\"\n            }\n\n        </span>\n    )\n}\n\nconst StackedIcons = ({ type, state }) => {\n    const iconColor = (state === \"closed\" ? \"red\" : \"green\")\n    let jsx = type ? <IssueIconStack state={iconColor} type={type} />\n        : <PrIconStack state={iconColor} type={type} />\n    return (jsx)\n}\nexport default StackedIcons;","import React from 'react';\nimport * as appHelpers from '../utils/appHelpers';\n\nconst TimeAgoComponent = ({ data }) => {\n    const createdAt = appHelpers.getTimeAgoString(new Date(data.created_at))\n    const updatedAt = appHelpers.getTimeAgoString(new Date(data.updated_at))\n    const user = data.user.login\n    const whichTime = createdAt !== updatedAt\n        ?\n        `#${data.number} created ${createdAt} (updated ${updatedAt})`\n        :\n        `#${data.number} created ${createdAt}`\n    let timeAgoString = `${whichTime} by ${user}`\n    const assigneesString = `${(data.assignees.length > 0 ?\n        ` ---  Assigned to: ${data.assignees.map(x => { return \" \" + x.login })}`\n        : \"\")}`\n    return (\n        <React.Fragment>\n            {timeAgoString + assigneesString}\n        </React.Fragment>\n    )\n}\nexport default TimeAgoComponent;","import React from 'react';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as appHelpers from '../utils/appHelpers';\nimport Comments from './Comments';\nimport FixedHeaderComponent from './FixedHeaderComponent';\nimport Labels from './Labels';\nimport Milestones from './Milestones';\nimport PaginationComponent from './PaginationComponent';\nimport StackedIcons from './StackedIcons';\nimport TimeAgoComponent from './TimeAgoComponent';\n\nimport 'bulma/css/bulma.css';\nimport '../css/GithubIssues.css';\n\nfunction incrementPage(page) {\n    return (previousState) => {\n        return { ...previousState, page: page, currentPageNumber: +page.split('=').pop(), loading: true };\n    };\n}\n\nfunction changeFilter(filterObj) {\n    return (previousState) => {\n        let stateTest = previousState.listFilter.state !== filterObj.state ? true : false\n        return { ...previousState, listFilter: filterObj, loading: stateTest };\n    };\n}\n\nconst headers = {\n    headers: {\n        Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n        Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n    }\n};\n\nconst baseUrl = \"https://api.github.com/repos\"\n\n\n\nclass GithubIssues extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user,\n            repo: this.props.repo,\n            listFilter: { state: \"open\", choice: \"issues\" },\n            since: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            per_page: 40,\n            sort: \"created\",\n            page: '',\n            currentPageNumber: 1,\n            pages: {},\n            issues: [],\n            loading: true,\n            error: null,\n            showBody: {},\n        };\n        // fix the this value\n        this.getIssues = this.getIssues.bind(this);\n       \n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        /**\n         * From Bulma Docs to activate responsive menu burger\n         */\n        const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n        if ($navbarBurgers.length > 0) {\n            $navbarBurgers.forEach(el => {\n                el.addEventListener('click', () => {\n                    const target = el.dataset.target;\n                    const $target = document.getElementById(target);\n                    el.classList.toggle('is-active');\n                    $target.classList.toggle('is-active');\n\n                });\n            });\n        }\n        // Get the avatar for the user/org and put it in the header\n      \n        // Get the issues and populate the panel\n        this.getIssues();\n    }\n\n    /**\n     * \n     * @param {} previousState \n     * @param {} nextState \n     * \n     * shouldComponentUpdate() enforces re-rendering to only  when state.page or state.listFilter is changed\n     */\n    shouldComponentUpdate(previousState, nextState) {\n        if (previousState.page !== nextState.page) {\n            return true;\n        }\n        if (previousState.listFilter !== nextState.listFilter) {\n            return true;\n        }\n        return false;\n    }\n\n  \n    /**\n     * Fetch issues for repository\n     */\n    getIssues() {\n        // 7 days ago from today in ISO - to be used for GH API parameter\n        const since = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n        // GET parameters to send to GH Issues API \n        // `this.state.listFilter.state` - this is ~confusing because GH refers to \n        // 'open, closed' as 'state' of an issue/PR\n        const params = appHelpers.encodeQueryString({ state: this.state.listFilter.state, since: since, per_page: 40, sort: \"created\" })\n        // Need an empty string to store Link headers from GET response since we need to reference it within promise chain - used for pagination\n        let linkHeaders = ''\n        // Build the URL from props/state(for the page) - [note: when state.page changes, we update]\n        let userRepoIssues = `${this.props.user}/${this.props.repo}/issues`\n        let fullUrl = `${baseUrl}/${userRepoIssues}${params}${this.state.page}`\n\n        fetch(fullUrl, headers)\n            .then(response => {\n                // If we have Link headers, parse them in to an object to store via appHelpers.parseLinkHeaders\n                if (response.headers.get('Link')) {\n                    linkHeaders = appHelpers.parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) return response.json();\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    pages: linkHeaders,\n                    issues: data,\n                    loading: false,\n                    error: null,\n                    showBody: {},\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false,\n                    error: error\n                });\n            });\n    }\n\n    // Render a loading bar during HTTP Request\n    renderLoading() {\n        return <progress className=\"progress is-large is-dark\" max=\"100\"></progress>;\n    }\n\n    // Render an error message\n    renderError() {\n        return (\n            <div>\n                Uh oh: {this.state.error.message}\n            </div>\n        );\n    }\n\n    /**\n     * \n     * @param {String} page\n     * expects a URL parameter like the end of pagination url - i.e '&page=2'\n     */\n    handlePageChange(page) {\n        this.setState(incrementPage(page), () => {\n            this.getIssues()\n        })\n    }\n\n    // Handles interaction with header filter buttons\n    handleFilterChange(toFilter) {\n        let newObj = { ...this.state.listFilter, ...toFilter }\n        this.setState(changeFilter(newObj), () => {\n            Object.keys(toFilter)[0] === \"state\" && this.getIssues()\n        })\n\n\n    }\n\n    // Renders the panel blocks that contain the issue information\n    renderIssues() {\n        if (this.state.error) {\n            return this.renderError();\n        }\n\n        const isVisible = (id) => {\n            return this.state.showBody[\"_\" + id] ? \" container bodyContainer\" : \" is-hidden\"\n        }\n\n        // Accordian behavior on panel blocks that render the issue markdown as html with showdown.js\n        const handleClick = (e) => {\n            e.preventDefault();\n            let obj = {}\n            const id = e.currentTarget.dataset.id;\n            obj[\"_\" + id] = this.state.showBody[\"_\" + id] === true ? false : true\n            this.setState({ showBody: obj })\n            if (obj[\"_\" + id]) {\n               this.state.issues.map(function(issues) {\n                    if (issues.id === +id) {\n                        return document.querySelector(`._${id}`).innerHTML = appHelpers.converter.makeHtml(issues.body)\n                    }\n                    return true\n                })\n            }\n          \n        }\n        /**\n         * \n         * @param Boolean issueOrPr\n         * expects true or false based on the presence of 'pull_request' property from issues repsonse object\n         */\n        const hideMe = (issueOrPr) => {\n            let choiceType = issueOrPr ? \"issues\" : \"pull requests\"\n            return (this.state.listFilter.choice !== (choiceType || \"all\") ? \" \" : \" is-hidden\")\n        }\n        return (\n            < React.Fragment >\n                {\n                    this.state.issues.map(function (data, index) {\n\n                        return <a href=\"#\" key={index} className={\"panel-block\" + hideMe(data.pull_request)}>\n                            <span data-id={data.id} className=\"panel-ovr\" onClick={handleClick} >\n                                <span className=\"columns is-mobile is-multiline is-vcentered is-2\">\n                                    <span className=\" column is-1\">\n                                        <span className=\"panel-icon icon is-small\">\n                                            <StackedIcons type={!data.pull_request} state={data.state} />\n                                        </span>\n                                    </span>\n                                    <span className=\"column is-11 info-container\">\n                                        <span className=\"_title\">{data.title}</span>\n                                        <br className=\"is-hidden-tablet\" />\n                                        <span className=\"time is-hidden-tablet\">\n                                            <TimeAgoComponent data={data} />\n                                            <Milestones milestone={data.milestone} _addclass={[\"is-hidden-mobile\"]} />\n                                        </span>\n                                        <br className=\"is-hidden-tablet\" />\n                                        <Labels labels={data.labels} />\n                                        <br className=\"is-hidden-mobile\" />\n                                        <span className=\"time is-hidden-mobile\">\n                                            <TimeAgoComponent data={data} />\n                                            <Milestones milestone={data.milestone} />\n                                            <Comments data={data} />\n                                        </span>\n                                    </span>\n                                    <span className=\"column show-body has-text-right is-pulled-right\">\n                                        <FontAwesomeIcon icon={faEye} />\n                                    </span>\n                                </span>\n                            </span>\n                            <span className={\"_\" + data.id + (isVisible(data.id))}></span>\n                        </a>;\n                    })\n                }\n\n            </ React.Fragment>\n        );\n    }\n    render() {\n\n        return (\n\n            <div className=\"container\">\n                <nav className=\"panel\">\n                    <FixedHeaderComponent listFilter={this.state.listFilter} onFilterChange={this.handleFilterChange} user={this.props.user} repo={this.props.repo} since={this.state.since} />\n                    {this.state.loading ?\n                        this.renderLoading()\n                        : this.renderIssues()}\n                    <nav className=\"navbar  is-fixed-bottom is-transparent\">\n                        <div className=\"navbar-start\" style={{ flexGrow: 1, justifyContent: \"center\" }}>\n                            <div className=\"navbar-item\">\n                                <PaginationComponent pages={this.state.pages} currentPageNumber={this.state.currentPageNumber} onPageChange={this.handlePageChange} />\n                            </div>\n                        </div>\n                    </nav>\n                </nav></div>);\n    }\n}\n\nexport default GithubIssues;\n","import React from 'react';\nimport GithubIssues from '../components/GithubIssues.jsx'\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">   \n      <GithubIssues  user=\"facebook\" repo=\"react\" />\n    </div>\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}
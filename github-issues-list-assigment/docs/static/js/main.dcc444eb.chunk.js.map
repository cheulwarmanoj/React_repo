{"version":3,"sources":["utils/appHelpers.js","components/Comments.jsx","components/FixedHeaderComponent.jsx","components/Labels.jsx","components/Milestones.jsx","components/PaginationComponent.jsx","components/StackedIcons.jsx","components/TimeAgoComponent.jsx","components/GithubIssues.jsx","app/App.js","utils/serviceWorker.js","index.js"],"names":["converter","require","Converter","tables","strikethrough","ghCompatibleHeaderId","literalMidWordUnderscores","ghCodeBlocks","tasklists","ghMentions","ghMentionsLink","Comments","data","className","comments","icon","faComment","transform","style","background","color","titleCase","inStr","replace","tStr","charAt","toUpperCase","substr","toLowerCase","doModal","show","previousState","modal","NavbarButtonGroup","buttonArray","filterType","clickFunction","listFilter","onClick","map","stateChoice","i","key","data-choice","data-list-filter","FixedHeaderComponent","props","state","avatar","handleFilter","bind","handleRepo","getAvatar","showModal","renderModal","this","previousProps","user","nnew","repo","baseUrl","avatarUrlBase","fetch","headers","Authorization","Accept","then","response","ok","json","Error","setState","owner","avatar_url","e","preventDefault","value","target","dataset","choice","obj","onFilterChange","console","log","onRepoChange","class","type","placeholder","ref","c","name","aria-label","date","Date","since","dateString","getTime","getTimezoneOffset","toISOString","split","titleString","role","src","alt","width","height","aria-expanded","data-target","aria-hidden","id","React","Component","padZero","str","len","Array","join","slice","invertColor","hex","bw","indexOf","length","r","parseInt","g","b","toString","Labels","labels","labelMap","label","index","backgroundColor","Fragment","Milestones","milestone","_addclass","faMapSigns","title","SwipeComponent","onSwipedLeft","onSwipingLeft","onSwipedRight","onSwipingRight","children","PaginationComponent","sendPageNumber","swipingLeft","swipingRight","onPageChange","currentTarget","url","absX","lastpage","pages","last","pop","prev","currentPageNumber","pageButtons","apply","Number","call","x","data-url","page","p","IssueIconStack","faCircle","faExclamationCircle","faCheck","PrIconStack","faCodeBranch","StackedIcons","iconColor","getTimeAgoString","timestamp","elapsed","now","getElapsedString","unit","round","Math","SECOND","MINUTE","HOUR","DAY","TimeAgoComponent","createdAt","created_at","updatedAt","updated_at","login","whichTime","number","timeAgoString","assigneesString","assignees","GithubIssues","per_page","sort","issues","loading","error","showBody","getIssues","handleRepoChange","handlePageChange","handleFilterChange","$navbarBurgers","prototype","document","querySelectorAll","forEach","el","addEventListener","$target","getElementById","classList","toggle","nextState","params","keys","Object","encodeURIComponent","appHelpers","linkHeaders","userRepoIssues","fullUrl","get","header","reduce","links","part","section","trim","catch","max","message","incrementPage","toFilter","filterObj","newObj","stateTest","changeRepo","renderError","handleClick","querySelector","innerHTML","makeHtml","body","hideMe","issueOrPr","choiceType","href","pull_request","data-id","faEye","renderLoading","renderIssues","flexGrow","justifyContent","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dcc444eb.chunk.js","sourcesContent":["const showdown = require('showdown')\n\nexport const converter = new showdown.Converter({\n    tables: true,\n    strikethrough: true,\n    ghCompatibleHeaderId: true,\n    literalMidWordUnderscores: true,\n    ghCodeBlocks: true,\n    tasklists: true,\n    ghMentions: true,\n    ghMentionsLink: 'https://github.com/{u}'\n})\n\n\nexport const encodeQueryString = (params) => {\n    const keys = Object.keys(params)\n    return keys.length ?\n        \"?\" + keys\n        .map(key => encodeURIComponent(key) +\n            \"=\" + encodeURIComponent(params[key]))\n        .join(\"&\") :\n        \"\"\n}\n\n\nexport const parseLinkHeader = (header) => {\n    if (header.length === 0) {\n        throw new Error(\"input must not be of zero length\");\n    }\n\n    // Split parts by comma and parse each part into a named link\n    return header.split(/(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/).reduce((links, part) => {\n        const section = part.split(/(?!\\B\"[^\"]*);(?![^\"]*\"\\B)/);\n        if (section.length < 2) {\n            throw new Error(\"section could not be split on ';'\");\n        }\n        const url = section[0].replace(/<(.*)>/, '$1').trim();\n        const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n\n        links[name] = url;\n\n        return links;\n    }, {});\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faComment,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst Comments = ({ data }) => {\n    let jsx = <span className={data.comments < 1 ? \"is-hidden\" : \"fa-layers  fa-lg comments\"}  >\n        <FontAwesomeIcon icon={faComment} transform=\"down-2 left-2\">1</FontAwesomeIcon>\n        <span className=\"fa-layers-counter fa-2x\" transform=\"up-5\" style={{ background: \"LightGrey\", color: \"black\" }}>{data.comments < 0 ? \"\" : data.comments}</span>\n    </span>\n\n    return (jsx);\n}\nexport default Comments;","import React from 'react';\n\nconst titleCase = (inStr) => {\n    return inStr.replace(/\\w\\S*/g, function (tStr) {\n        return tStr.charAt(0).toUpperCase() + tStr.substr(1).toLowerCase();\n    });\n}\nfunction doModal(show) {\n    return (previousState) => {\n        return { ...previousState, modal: show };\n    };\n}\nconst NavbarButtonGroup = ({ buttonArray, filterType, clickFunction, listFilter }) => {\n    return (\n        <div className=\"buttons has-addons\" onClick={clickFunction}>\n            {buttonArray.map((stateChoice, i) => {\n                return (\n                    <span key={i} data-choice={stateChoice}\n                        data-list-filter={filterType}\n                        className={\"button \" + (listFilter[filterType] === stateChoice ? \"is-selected is-active is-info\" : \"\")}>{titleCase(stateChoice)}\n                    </span>\n                )\n            })}\n        </div>\n    )\n}\n\nclass FixedHeaderComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: \"https://github.githubassets.com/images/icons/emoji/octocat.png\",\n            modal: \"\"\n\n        };\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleRepo = this.handleRepo.bind(this);\n        this.getAvatar = this.getAvatar.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.renderModal = this.renderModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.getAvatar()\n\n    }\n\n    shouldComponentUpdate(previousProps, previousState) {\n        if (previousProps.listFilter !== this.props.listFilter) {\n            return true;\n        }\n        if (previousProps.user !== this.props.user) {\n            return true;\n        }\n        if (previousState.avatar !== this.state.avatar) {\n            return true;\n        }\n        if (previousState.modal !== this.state.modal) {\n            return true;\n        }\n        return false;\n    }\n\n    getAvatar(nnew, user, repo) {\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n        const baseUrl = \"https://api.github.com/repos\"\n        const avatarUrlBase = nnew ? `${baseUrl}/${user}/${repo}` : `${baseUrl}/${this.props.user}/${this.props.repo}`\n\n\n        fetch(avatarUrlBase, headers)\n            .then(response => {\n                if (response.ok) return response.json();\n                throw new Error('Request failed.');\n            }).then(data => {\n                this.setState({ avatar: data.owner.avatar_url, modal: \"\" })\n            })\n    }\n\n    handleFilter(e) {\n        e.preventDefault();\n        const value = e.target.dataset.choice\n        const type = e.target.dataset.listFilter\n        let obj = {}\n        obj[type] = value\n        this.props.onFilterChange(obj);\n    }\n    handleRepo(e) {\n        e.preventDefault();\n        console.log(e.target)\n        console.log(this.user.value + \" - \" + this.repo.value)\n\n        this.getAvatar(true, this.user.value, this.repo.value)\n        this.props.onRepoChange(this.user.value, this.repo.value);\n\n    }\n    showModal(e) {\n        e.preventDefault();\n        console.log(e)\n        if (this.state.modal !== true) {\n            this.setState(doModal(true))\n        } else {\n            this.setState(doModal(false))\n        }\n\n\n    }\n    renderModal() {\n\n        return <div class={\"modal \" + (this.state.modal === true ? \"is-active\" : \"\")}>\n            <div class=\"modal-background\" ></div>\n            <div class=\"modal-content\">\n                <form  >\n                    <div class=\"field\">\n                        <label class=\"label is-large has-text-white\">Github User</label>\n                        <div class=\"control\">\n                            <input class=\"input is-large\" type=\"text\" placeholder=\"facebook\" ref={(c) => this.user = c} name=\"user\" />\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label class=\"label is-large has-text-white\">Repository Name</label>\n                        <div class=\"control\">\n                            <input class=\"input is-large\" type=\"text\" placeholder=\"react\" ref={(c) => this.repo = c} name=\"repo\" />\n                        </div>\n                    </div>\n                    <button class=\"button is-link is-large is-fullwidth\" onClick={this.handleRepo}>Enter</button>\n                </form>\n            </div>\n            <button class=\"modal-close is-large\" aria-label=\"close\" onClick={this.showModal}></button>\n        </div>\n\n    }\n\n    render() {\n\n        const date = new Date(this.props.since);\n        const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n            .toISOString()\n            .split(\"T\")[0];\n\n        const { state, choice } = this.props.listFilter\n        const titleString = `${titleCase(state)} ${choice === \"all\" ? \"issues/PRs\" : choice} since ${dateString}`\n        return (\n\n            <nav className=\"navbar is-fixed-top navbar-center panel-heading\" role=\"navigation\">\n                <div className=\"navbar-brand navbar-center \" >\n\n\n                    <span className=\"navbar-item\" >\n                        <span className=\"img-label-container is-unselectable\" onClick={this.showModal}>\n                            <img src={this.state.avatar} alt={`${this.props.user}/${this.props.repo}`} width=\"28px\" height=\"28px\" />\n                            <p>{this.props.repo}</p>\n                        </span>\n\n                    </span>\n                    <span className=\"navbar-item \">\n                        <p className=\"is-unselectable is-mobile  title-string\">{titleString}</p ></span>\n                    <span role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </span>\n                </div>\n                {this.renderModal()}\n\n                {\n                    <div className=\"navbar-center\">\n                        <div id=\"navbarBasicExample\" className=\"navbar-menu navbar-center\">\n                            <span className=\"navbar-item \">\n                                <NavbarButtonGroup\n                                    buttonArray={[\"issues\", \"pull requests\", \"all\"]}\n                                    filterType=\"choice\"\n                                    clickFunction={this.handleFilter}\n                                    listFilter={this.props.listFilter}\n                                />\n                            </span>\n                            <span className=\"navbar-item\">\n                                <NavbarButtonGroup\n                                    buttonArray={[\"open\", \"closed\", \"all\"]}\n                                    filterType=\"state\"\n                                    clickFunction={this.handleFilter}\n                                    listFilter={this.props.listFilter}\n                                />\n                            </span>\n                        </div>\n                    </div>\n                }\n            </nav>\n        );\n    }\n}\nexport default FixedHeaderComponent;","import React from 'react';\n\nconst  padZero = (str, len) => {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n}\n\nconst invertColor = (hex, bw) => {\n    if (hex.indexOf('#') === 0) { hex = hex.slice(1) }\n    if (hex.length === 3) { hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] }\n    if (hex.length !== 6) { throw new Error('Invalid HEX color.') }\n    var r = parseInt(hex.slice(0, 2), 16),\n        g = parseInt(hex.slice(2, 4), 16),\n        b = parseInt(hex.slice(4, 6), 16);\n    if (bw) {\n        return (r * 0.299 + g * 0.587 + b * 0.114) > 186 ? '#000000' : '#FFFFFF'\n    }\n    r = (255 - r).toString(16);\n    g = (255 - g).toString(16);\n    b = (255 - b).toString(16);\n    return \"#\" + padZero(r) + padZero(g) + padZero(b)\n\n}\n\nconst Labels = ({ labels }) => {\n    let labelMap = labels.map((label, index) => {\n        return <span key={index} style={{ backgroundColor: \"#\" + label.color, color: invertColor(\"#\" + label.color, true) }} className={\"tag \" + (labels.length === 0 ? \"is-hidden\" : \"\")}>{label.name}</span>\n    })\n    return (\n        <React.Fragment>\n            {labelMap}\n        </React.Fragment>\n    )\n}\n\nexport default Labels;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faMapSigns,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst Milestones = ({ milestone, _addclass }) => {\n    let jsx = <span className={!milestone ? \"is-hidden\" : \"milestone\" + \" \" + (_addclass ? [..._addclass] : \"\")}>\n        <FontAwesomeIcon icon={faMapSigns} className=\"fa-lg\" /> {!milestone ? \"\" : milestone.title}\n    </span>\n    return jsx;\n}\n\nexport default Milestones;","import React from 'react';\n\nimport {Swipeable} from 'react-swipeable'\nclass SwipeComponent extends React.Component {\n    render() {\n        return (\n            <Swipeable\n                onSwipedLeft={this.props.onSwipingLeft}\n                onSwipedRight={this.props.onSwipingRight}\n              >\n              {this.props.children}\n      </Swipeable>\n        )\n    }\n}\n\nclass PaginationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sendPageNumber = this.sendPageNumber.bind(this);\n        this.swipingLeft = this.swipingLeft.bind(this);\n        this.swipingRight = this.swipingRight.bind(this);\n    }\n\n    sendPageNumber(e) {\n        this.props.onPageChange(`${e.currentTarget.dataset.url}`);\n    }\n   \n    swipingLeft(e, absX) {\n       \n        const lastpage = this.props.pages.last ? this.props.pages.last.split(\"=\").pop() : this.props.pages.prev ? +this.props.pages.prev.split(\"=\").pop() + 1 : 1\n        if(this.props.currentPageNumber<lastpage){\n        this.props.onPageChange(`&page=${this.props.currentPageNumber + 1}`)};\n    }\n    swipingRight(e, absX) {\n        if (this.props.currentPageNumber >1 ) {\n            this.props.onPageChange(`&page=${this.props.currentPageNumber - 1}`)\n        };\n    }\n\n    render() {\n      \n        const pages = this.props.pages;\n        const currentPageNumber = this.props.currentPageNumber\n        const lastpage = pages.last ? pages.last.split(\"=\").pop() : pages.prev ? +pages.prev.split(\"=\").pop() + 1 : 1\n        const pageButtons = Array.apply(null, { length: lastpage })\n            .map(Number.call, Number)\n            .map(x => `&page=${x + 1}`)\n       \n        return (\n            <SwipeComponent onSwipingLeft={this.swipingLeft} onSwipingRight={this.swipingRight}>\n            <nav className=\"pagination is-medium is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                <button\n                    className={\"pagination-previous \" + (currentPageNumber > 1 ? \"\" : \" is-invisible\")}\n                    data-url={`&page=${currentPageNumber - 1}`}\n                    onClick={this.sendPageNumber}>\n                    ◄◄\n                </button>\n                <button\n                    className=\"pagination-link is-hidden-tablet\">{`${currentPageNumber}/${lastpage}`}\n                </button>\n                <button \n                    className={\"pagination-next \" + (currentPageNumber < lastpage ? \"\" : \" is-invisible\")}\n                    data-url={`&page=${currentPageNumber + 1}`}\n                    onClick={this.sendPageNumber}>\n                    ►►\n                </button>\n                <ul className=\"pagination-list\">\n                    {pageButtons.map((page, i) => {\n                        const p = +page.split(\"=\").pop()\n                        return <li key={i} className=\"is-hidden-mobile\">\n                            <button \n                                data-url={page}\n                                onClick={this.sendPageNumber}\n                                className={\"pagination-link \" + (p === (currentPageNumber) ? \" is-current\" : p)}\n                                aria-label={\"Goto page \" + p} >{p}\n                            </button>\n                        </li>\n                    }\n                    )}\n                </ul>\n                \n                </nav>\n                </SwipeComponent >\n        );\n    }\n}\nexport default PaginationComponent;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faCheck,\n    faExclamationCircle,\n    faCodeBranch,\n    faCircle\n} from '@fortawesome/free-solid-svg-icons'\n\nconst IssueIconStack = ({ state }) => {\n    return (\n        <span className=\"fa-layers fa-fw fa-2x\">\n            <FontAwesomeIcon icon={faCircle} color={state} />\n            <FontAwesomeIcon\n                className=\"fa-inverse\"\n                icon={faExclamationCircle}\n                color={state}\n                transform=\"shrink-2\"\n            />\n            {\n                state === \"red\" &&\n                <FontAwesomeIcon\n                    icon={faCheck}\n                    color={state}\n                    transform=\"shrink-10 right-5 up-4\"\n                />\n            }\n        </span>\n    )\n}\n\nconst PrIconStack = ({ state }) => {\n    return (\n        <span className=\"fa-layers fa-fw fa-2x\">\n            <FontAwesomeIcon\n                icon={faCodeBranch}\n                color={state}\n                transform=\"shrink-4\"\n            />\n            {\n                state === \"red\" ?\n                    <FontAwesomeIcon\n                        icon={faCheck}\n                        color={state}\n                        transform=\"shrink-8 right-4 down-4\"\n                    />\n                    : \"\"\n            }\n        </span>\n    )\n}\n\nconst StackedIcons = ({ type, state }) => {\n    const iconColor = (state === \"closed\" ? \"red\" : \"green\")\n    let jsx = type ? <IssueIconStack state={iconColor} type={type} />\n        : <PrIconStack state={iconColor} type={type} />\n    return (jsx)\n}\n\nexport default StackedIcons;","import React from 'react';\n\nconst getTimeAgoString = (timestamp) => {\n    const SECOND = 1000\n    const MINUTE = SECOND * 60\n    const HOUR = MINUTE * 60\n    const DAY = HOUR * 24\n    const MONTH = DAY * 30\n    const YEAR = DAY * 365\n\n    const elapsed = Date.now() - timestamp,\n        getElapsedString = (value, unit) => {\n            const round = Math.round(elapsed / value);\n            return `${round} ${unit}${round > 1\n                ? 's'\n                : ''} ago`;\n        };\n    if (elapsed < MINUTE) {\n        return getElapsedString(SECOND, 'second');\n    }\n    if (elapsed < HOUR) {\n        return getElapsedString(MINUTE, 'minute');\n    }\n    if (elapsed < DAY) {\n        return getElapsedString(HOUR, 'hour');\n    }\n    if (elapsed < MONTH) {\n        return getElapsedString(DAY, 'day');\n    }\n    if (elapsed < YEAR) {\n        return getElapsedString(MONTH, 'month');\n    }\n    return getElapsedString(YEAR, 'year');\n}\n\nconst TimeAgoComponent = ({ data }) => {\n    const createdAt = getTimeAgoString(new Date(data.created_at))\n    const updatedAt = getTimeAgoString(new Date(data.updated_at))\n    const user = data.user.login\n    const whichTime = createdAt !== updatedAt\n        ?\n        `#${data.number} created ${createdAt} (updated ${updatedAt})`\n        :\n        `#${data.number} created ${createdAt}`\n    let timeAgoString = `${whichTime} by ${user}`\n    const assigneesString = `${(data.assignees.length > 0 ?\n        ` ---  Assigned to: ${data.assignees.map(x => { return \" \" + x.login })}`\n        : \"\")}`\n    return (\n        <React.Fragment>\n            {timeAgoString + assigneesString}\n        </React.Fragment>\n    )\n}\n\nexport default TimeAgoComponent;","import React from 'react';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as appHelpers from '../utils/appHelpers';\nimport Comments from './Comments';\nimport FixedHeaderComponent from './FixedHeaderComponent';\nimport Labels from './Labels';\nimport Milestones from './Milestones';\nimport PaginationComponent from './PaginationComponent';\nimport StackedIcons from './StackedIcons';\nimport TimeAgoComponent from './TimeAgoComponent';\n\nimport 'bulma/css/bulma.css';\nimport '../css/GithubIssues.css';\n\nfunction incrementPage(page) {\n    return (previousState) => {\n        return { ...previousState, page: page, currentPageNumber: +page.split('=').pop(), loading: true };\n    };\n}\n\nfunction changeFilter(filterObj) {\n    return (previousState) => {\n        let stateTest = previousState.listFilter.state !== filterObj.state ? true : false\n        return { ...previousState, listFilter: filterObj, loading: stateTest };\n    };\n}\nfunction changeRepo(user,repo) {\n    return (previousState) => {\n       \n        return { ...previousState, user: user,repo: repo, loading: true };\n    };\n}\nconst headers = {\n    headers: {\n        Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n        Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n    }\n};\n\nconst baseUrl = \"https://api.github.com/repos\"\n\n\n\nclass GithubIssues extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: 'angular',\n            repo: 'angular',\n            listFilter: { state: \"open\", choice: \"issues\" },\n            since: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            per_page: 40,\n            sort: \"created\",\n            page: '',\n            currentPageNumber: 1,\n            pages: {},\n            issues: [],\n            loading: true,\n            error: null,\n            showBody: {},\n        };\n        // fix the this value\n        this.getIssues = this.getIssues.bind(this);\n        this.handleRepoChange = this.handleRepoChange.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        /**\n         * From Bulma Docs to activate responsive menu burger\n         */\n        const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n        if ($navbarBurgers.length > 0) {\n            $navbarBurgers.forEach(el => {\n                el.addEventListener('click', () => {\n                    const target = el.dataset.target;\n                    const $target = document.getElementById(target);\n                    el.classList.toggle('is-active');\n                    $target.classList.toggle('is-active');\n\n                });\n            });\n        }\n        // Get the avatar for the user/org and put it in the header\n      \n        // Get the issues and populate the panel\n        this.getIssues();\n    }\n\n\n    shouldComponentUpdate(previousState, nextState) {\n        if (previousState.page !== nextState.page) {\n            return true;\n        }\n        if (previousState.listFilter !== nextState.listFilter) {\n            return true;\n        }\n        return false;\n    }\n\n  \n    /**\n     * Fetch issues for repository\n     */\n    getIssues() {\n        // 7 days ago from today in ISO - to be used for GH API parameter\n        const since = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n        // GET parameters to send to GH Issues API \n        // `this.state.listFilter.state` - this is ~confusing because GH refers to \n        // 'open, closed' as 'state' of an issue/PR\n        const params = appHelpers.encodeQueryString({ state: this.state.listFilter.state, since: since, per_page: 40, sort: \"created\" })\n        // Need an empty string to store Link headers from GET response since we need to reference it within promise chain - used for pagination\n        let linkHeaders = ''\n        // Build the URL from props/state(for the page) - [note: when state.page changes, we update]\n        let userRepoIssues = `${this.state.user}/${this.state.repo}/issues`\n        let fullUrl = `${baseUrl}/${userRepoIssues}${params}${this.state.page}`\n\n        fetch(fullUrl, headers)\n            .then(response => {\n                // If we have Link headers, parse them in to an object to store via appHelpers.parseLinkHeaders\n                if (response.headers.get('Link')) {\n                    linkHeaders = appHelpers.parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) return response.json();\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    pages: linkHeaders,\n                    issues: data,\n                    loading: false,\n                    error: null,\n                    showBody: {},\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false,\n                    error: error\n                });\n            });\n    }\n\n    // Render a loading bar during HTTP Request\n    renderLoading() {\n        return <progress className=\"progress is-large is-dark\" max=\"100\"></progress>;\n    }\n\n    // Render an error message\n    renderError() {\n        return (\n            <div>\n                Uh oh: {this.state.error.message}\n            </div>\n        );\n    }\n\n    /**\n     * \n     * @param {String} page\n     * expects a URL parameter like the end of pagination url - i.e '&page=2'\n     */\n    handlePageChange(page) {\n        this.setState(incrementPage(page), () => {\n            this.getIssues()\n        })\n    }\n\n    // Handles interaction with header filter buttons\n    handleFilterChange(toFilter) {\n        let newObj = { ...this.state.listFilter, ...toFilter }\n        this.setState(changeFilter(newObj), () => {\n            Object.keys(toFilter)[0] === \"state\" && this.getIssues()\n        })\n\n\n    }\nhandleRepoChange(user, repo) {\n        this.setState(changeRepo(user,repo), () => {\n            this.getIssues()\n        })\n    }\n    // Renders the panel blocks that contain the issue information\n    renderIssues() {\n        if (this.state.error) {\n            return this.renderError();\n        }\n\n        const isVisible = (id) => {\n            return this.state.showBody[\"_\" + id] ? \" container bodyContainer\" : \" is-hidden\"\n        }\n\n        // Accordian behavior on panel blocks that render the issue markdown as html with showdown.js\n        const handleClick = (e) => {\n            e.preventDefault();\n            let obj = {}\n            const id = e.currentTarget.dataset.id;\n            obj[\"_\" + id] = this.state.showBody[\"_\" + id] === true ? false : true\n            this.setState({ showBody: obj })\n            if (obj[\"_\" + id]) {\n               this.state.issues.map(function(issues) {\n                    if (issues.id === +id) {\n                        return document.querySelector(`._${id}`).innerHTML = appHelpers.converter.makeHtml(issues.body)\n                    }\n                    return true\n                })\n            }\n          \n        }\n        /**\n         * \n         * @param Boolean issueOrPr\n         * expects true or false based on the presence of 'pull_request' property from issues repsonse object\n         */\n        const hideMe = (issueOrPr) => {\n            let choiceType = issueOrPr ? \"issues\" : \"pull requests\"\n            return (this.state.listFilter.choice !== (choiceType || \"all\") ? \" \" : \" is-hidden\")\n        }\n        return (\n            < React.Fragment >\n                {\n                    this.state.issues.map(function (data, index) {\n\n                        return <a href=\"#\" key={index} className={\"panel-block\" + hideMe(data.pull_request)}>\n                            <span data-id={data.id} className=\"panel-ovr\" onClick={handleClick} >\n                                <span className=\"columns is-mobile is-multiline is-vcentered is-2\">\n                                    <span className=\" column is-1\">\n                                        <span className=\"panel-icon icon is-small\">\n                                            <StackedIcons type={!data.pull_request} state={data.state} />\n                                        </span>\n                                    </span>\n                                    <span className=\"column is-11 info-container\">\n                                        <span className=\"_title\">{data.title}</span>\n                                        <br className=\"is-hidden-tablet\" />\n                                        <span className=\"time is-hidden-tablet\">\n                                            <TimeAgoComponent data={data} />\n                                            <Milestones milestone={data.milestone} _addclass={[\"is-hidden-mobile\"]} />\n                                        </span>\n                                        <br className=\"is-hidden-tablet\" />\n                                        <Labels labels={data.labels} />\n                                        <br className=\"is-hidden-mobile\" />\n                                        <span className=\"time is-hidden-mobile\">\n                                            <TimeAgoComponent data={data} />\n                                            <Milestones milestone={data.milestone} />\n                                            <Comments data={data} />\n                                        </span>\n                                    </span>\n                                    <span className=\"column show-body has-text-right is-pulled-right\">\n                                        <FontAwesomeIcon icon={faEye} />\n                                    </span>\n                                </span>\n                            </span>\n                            <span className={\"_\" + data.id + (isVisible(data.id))}></span>\n                        </a>;\n                    })\n                }\n\n            </ React.Fragment>\n        );\n    }\n    render() {\n\n        return (\n\n            <div className=\"container\">\n                <nav className=\"panel\">\n                    <FixedHeaderComponent listFilter={this.state.listFilter} onFilterChange={this.handleFilterChange} onRepoChange={this.handleRepoChange} user={this.state.user} repo={this.state.repo} since={this.state.since} />\n                    {this.state.loading ?\n                        this.renderLoading()\n                        : this.renderIssues()}\n                    <nav className=\"navbar  is-fixed-bottom is-transparent\">\n                        <div className=\"navbar-start\" style={{ flexGrow: 1, justifyContent: \"center\" }}>\n                            <div className=\"navbar-item\">\n                                <PaginationComponent pages={this.state.pages} currentPageNumber={this.state.currentPageNumber} onPageChange={this.handlePageChange} />\n                            </div>\n                        </div>\n                    </nav>\n                </nav></div>);\n    }\n}\n\nexport default GithubIssues;\n","import React from 'react';\nimport GithubIssues from '../components/GithubIssues.jsx'\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">   \n      <GithubIssues  user=\"angular\" repo=\"angular\" />\n    </div>\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}